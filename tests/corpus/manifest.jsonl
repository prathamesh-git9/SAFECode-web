{"filename": "cwe134_safe_printf.c", "code": "#include <stdio.h>\nint main() {\n    char *user_input = \"Hello World\";\n    printf(\"%s\\n\", user_input);  /* Safe: literal format */\n    return 0;\n}", "expected_status": "SUPPRESSED", "expected_cwe": "CWE-134", "expected_reason": "printf_literal_format"}
{"filename": "cwe134_safe_snprintf.c", "code": "#include <stdio.h>\nint main() {\n    char buffer[100];\n    char *input = \"test\";\n    snprintf(buffer, sizeof(buffer), \"%s\", input);  /* Safe: explicit size */\n    return 0;\n}", "expected_status": "SUPPRESSED", "expected_cwe": "CWE-134", "expected_reason": "snprintf_literal_format"}
{"filename": "cwe78_safe_execl.c", "code": "#include <unistd.h>\nint main() {\n    char *arg = \"filename.txt\";\n    execl(\"/bin/ls\", \"ls\", \"--\", arg, NULL);  /* Safe: constant path + -- */\n    return 0;\n}", "expected_status": "SUPPRESSED", "expected_cwe": "CWE-78", "expected_reason": "execl_no_shell"}
{"filename": "cwe78_safe_exec_allowlist.c", "code": "#include <unistd.h>\nint is_safe_token(const char *token) {\n    return strspn(token, \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789._-/\") == strlen(token) && !strstr(token, \"..\");\n}\nint main() {\n    char *arg = \"filename.txt\";\n    if (is_safe_token(arg)) {\n        execl(\"/bin/ls\", \"ls\", arg, NULL);\n    }\n    return 0;\n}", "expected_status": "SUPPRESSED", "expected_cwe": "CWE-78", "expected_reason": "exec_arg_allowlist"}
{"filename": "cwe120_safe_strncpy.c", "code": "#include <string.h>\nint main() {\n    char dest[10];\n    char *src = \"Hello World\";\n    strncpy(dest, src, sizeof(dest) - 1);\n    dest[sizeof(dest) - 1] = '\\0';  /* Safe: bounds + null */\n    return 0;\n}", "expected_status": "SUPPRESSED", "expected_cwe": "CWE-120", "expected_reason": "strncpy_bounds_plus_nul"}
{"filename": "cwe120_safe_strncat.c", "code": "#include <string.h>\nint main() {\n    char dest[20] = \"Hello\";\n    char *src = \" World\";\n    size_t room = sizeof(dest) - strlen(dest) - 1;\n    strncat(dest, src, room);  /* Safe: space guard */\n    return 0;\n}", "expected_status": "SUPPRESSED", "expected_cwe": "CWE-120", "expected_reason": "strncat_space_guard"}
{"filename": "cwe120_safe_scanf.c", "code": "#include <stdio.h>\nint main() {\n    char buffer[10];\n    scanf(\"%9s\", buffer);  /* Safe: width specifier */\n    return 0;\n}", "expected_status": "SUPPRESSED", "expected_cwe": "CWE-120", "expected_reason": "scanf_width_guard"}
{"filename": "cwe787_safe_bounds.c", "code": "#include <stdio.h>\nint main() {\n    int arr[10];\n    for (int i = 0; i < sizeof(arr)/sizeof(arr[0]); i++) {\n        arr[i] = i;  /* Safe: bounds check */\n    }\n    return 0;\n}", "expected_status": "SUPPRESSED", "expected_cwe": "CWE-787", "expected_reason": "index_bounds_guard"}
{"filename": "cwe190_safe_overflow.c", "code": "#include <stdlib.h>\nint main() {\n    size_t a = 1000;\n    size_t b = 2000;\n    if (a > SIZE_MAX - b) {\n        return 1;  /* Safe: overflow guard */\n    }\n    size_t result = a + b;\n    void *ptr = malloc(result);\n    return 0;\n}", "expected_status": "SUPPRESSED", "expected_cwe": "CWE-190", "expected_reason": "overflow_guard"}
{"filename": "cwe415_safe_free.c", "code": "#include <stdlib.h>\nint main() {\n    void *ptr = malloc(100);\n    free(ptr);\n    ptr = NULL;  /* Safe: free then null */\n    return 0;\n}", "expected_status": "SUPPRESSED", "expected_cwe": "CWE-415", "expected_reason": "free_then_null"}
{"filename": "cwe476_safe_null.c", "code": "#include <string.h>\nint main() {\n    char *ptr = NULL;\n    if (!ptr) {\n        return 1;  /* Safe: null guard */\n    }\n    strlen(ptr);\n    return 0;\n}", "expected_status": "SUPPRESSED", "expected_cwe": "CWE-476", "expected_reason": "null_guarded_use"}
{"filename": "cwe22_safe_path.c", "code": "#include <fcntl.h>\nint is_safe_relpath(const char *path) {\n    return !strstr(path, \"..\") && strspn(path, \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789._-/\") == strlen(path);\n}\nint main() {\n    char *path = \"config.txt\";\n    if (is_safe_relpath(path)) {\n        open(path, O_RDONLY);  /* Safe: path validation */\n    }\n    return 0;\n}", "expected_status": "SUPPRESSED", "expected_cwe": "CWE-22", "expected_reason": "relpath_allowlist"}
{"filename": "cwe367_safe_toctou.c", "code": "#include <fcntl.h>\nint main() {\n    char *path = \"temp.txt\";\n    open(path, O_CREAT | O_EXCL, 0600);  /* Safe: O_EXCL */\n    return 0;\n}", "expected_status": "SUPPRESSED", "expected_cwe": "CWE-367", "expected_reason": "toctou_o_excl"}
{"filename": "cwe377_safe_mkstemp.c", "code": "#include <stdlib.h>\n#include <unistd.h>\nint main() {\n    char template[] = \"/tmp/fileXXXXXX\";\n    int fd = mkstemp(template);\n    close(fd);  /* Safe: mkstemp + close */\n    return 0;\n}", "expected_status": "SUPPRESSED", "expected_cwe": "CWE-377", "expected_reason": "mkstemp_safe"}
{"filename": "cwe467_safe_sizeof.c", "code": "#include <string.h>\nint main() {\n    char buffer[100];\n    memcpy(buffer, \"test\", sizeof(buffer));  /* Safe: sizeof array */\n    return 0;\n}", "expected_status": "SUPPRESSED", "expected_cwe": "CWE-467", "expected_reason": "sizeof_fixed_buffer"}
{"filename": "cwe330_safe_crypto.c", "code": "#include <stdlib.h>\n#include <sys/random.h>\nint main() {\n    unsigned char buf[32];\n    getrandom(buf, sizeof(buf), 0);  /* Safe: crypto RNG */\n    return 0;\n}", "expected_status": "SUPPRESSED", "expected_cwe": "CWE-330", "expected_reason": "crypto_rng_present"}
{"filename": "cwe134_vulnerable.c", "code": "#include <stdio.h>\nint main() {\n    char *user_fmt = \"%s\";\n    printf(user_fmt, \"test\");  /* Vulnerable: user format */\n    return 0;\n}", "expected_status": "ACTIVE", "expected_cwe": "CWE-134", "expected_reason": null}
{"filename": "cwe78_vulnerable.c", "code": "#include <stdlib.h>\nint main() {\n    char *cmd = \"ls -la\";\n    system(cmd);  /* Vulnerable: user command */\n    return 0;\n}", "expected_status": "ACTIVE", "expected_cwe": "CWE-78", "expected_reason": null}
{"filename": "cwe120_vulnerable.c", "code": "#include <string.h>\nint main() {\n    char dest[5];\n    char *src = \"Hello World\";\n    strcpy(dest, src);  /* Vulnerable: no bounds */\n    return 0;\n}", "expected_status": "ACTIVE", "expected_cwe": "CWE-120", "expected_reason": null}
{"filename": "cwe377_vulnerable.c", "code": "#include <stdlib.h>\nint main() {\n    char *temp = tmpnam(NULL);  /* Vulnerable: tmpnam */\n    return 0;\n}", "expected_status": "ACTIVE", "expected_cwe": "CWE-377", "expected_reason": null}
